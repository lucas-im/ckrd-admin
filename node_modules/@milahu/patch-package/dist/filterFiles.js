"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeIgnoredFiles = void 0;
const path_1 = require("./path");
const fs_extra_1 = require("fs-extra");
const klaw_sync_1 = __importDefault(require("klaw-sync"));
const isDebug = global.patchPackageIsDebug;
function removeIgnoredFiles(dir, includePaths, excludePaths) {
    if (isDebug) {
        console.log(`patch-package: removeIgnoredFiles: dir = ${dir}`);
        console.log(`patch-package: removeIgnoredFiles: includePaths = ${includePaths}`);
        console.log(`patch-package: removeIgnoredFiles: excludePaths = ${excludePaths}`);
    }
    (0, klaw_sync_1.default)(dir, { nodir: true })
        .map((item) => item.path.slice(`${dir}/`.length))
        .filter((relativePath) => !relativePath.match(includePaths) || relativePath.match(excludePaths))
        .forEach((relativePath) => {
        if (isDebug) {
            console.log(`removeIgnoredFiles: remove ${relativePath}`);
        }
        (0, fs_extra_1.removeSync)((0, path_1.join)(dir, relativePath));
    });
}
exports.removeIgnoredFiles = removeIgnoredFiles;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyRmlsZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZmlsdGVyRmlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUNBQTZCO0FBQzdCLHVDQUFxQztBQUNyQywwREFBZ0M7QUFFaEMsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFBO0FBRTFDLFNBQWdCLGtCQUFrQixDQUNoQyxHQUFXLEVBQ1gsWUFBb0IsRUFDcEIsWUFBb0I7SUFFcEIsSUFBSSxPQUFPLEVBQUU7UUFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLDRDQUE0QyxHQUFHLEVBQUUsQ0FBQyxDQUFBO1FBQzlELE9BQU8sQ0FBQyxHQUFHLENBQUMscURBQXFELFlBQVksRUFBRSxDQUFDLENBQUE7UUFDaEYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxREFBcUQsWUFBWSxFQUFFLENBQUMsQ0FBQTtLQUNqRjtJQUNELElBQUEsbUJBQVEsRUFBQyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUM7U0FDM0IsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2hELE1BQU0sQ0FDTCxDQUFDLFlBQVksRUFBRSxFQUFFLENBQ2YsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQ3hFO1NBQ0EsT0FBTyxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUU7UUFDeEIsSUFBSSxPQUFPLEVBQUU7WUFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLDhCQUE4QixZQUFZLEVBQUUsQ0FBQyxDQUFBO1NBQzFEO1FBQ0QsSUFBQSxxQkFBVSxFQUFDLElBQUEsV0FBSSxFQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFBO0lBQ3JDLENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQztBQXRCRCxnREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqb2luIH0gZnJvbSBcIi4vcGF0aFwiXG5pbXBvcnQgeyByZW1vdmVTeW5jIH0gZnJvbSBcImZzLWV4dHJhXCJcbmltcG9ydCBrbGF3U3luYyBmcm9tIFwia2xhdy1zeW5jXCJcblxuY29uc3QgaXNEZWJ1ZyA9IGdsb2JhbC5wYXRjaFBhY2thZ2VJc0RlYnVnXG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVJZ25vcmVkRmlsZXMoXG4gIGRpcjogc3RyaW5nLFxuICBpbmNsdWRlUGF0aHM6IFJlZ0V4cCxcbiAgZXhjbHVkZVBhdGhzOiBSZWdFeHAsXG4pIHtcbiAgaWYgKGlzRGVidWcpIHtcbiAgICBjb25zb2xlLmxvZyhgcGF0Y2gtcGFja2FnZTogcmVtb3ZlSWdub3JlZEZpbGVzOiBkaXIgPSAke2Rpcn1gKVxuICAgIGNvbnNvbGUubG9nKGBwYXRjaC1wYWNrYWdlOiByZW1vdmVJZ25vcmVkRmlsZXM6IGluY2x1ZGVQYXRocyA9ICR7aW5jbHVkZVBhdGhzfWApXG4gICAgY29uc29sZS5sb2coYHBhdGNoLXBhY2thZ2U6IHJlbW92ZUlnbm9yZWRGaWxlczogZXhjbHVkZVBhdGhzID0gJHtleGNsdWRlUGF0aHN9YClcbiAgfVxuICBrbGF3U3luYyhkaXIsIHsgbm9kaXI6IHRydWUgfSlcbiAgICAubWFwKChpdGVtKSA9PiBpdGVtLnBhdGguc2xpY2UoYCR7ZGlyfS9gLmxlbmd0aCkpXG4gICAgLmZpbHRlcihcbiAgICAgIChyZWxhdGl2ZVBhdGgpID0+XG4gICAgICAgICFyZWxhdGl2ZVBhdGgubWF0Y2goaW5jbHVkZVBhdGhzKSB8fCByZWxhdGl2ZVBhdGgubWF0Y2goZXhjbHVkZVBhdGhzKSxcbiAgICApXG4gICAgLmZvckVhY2goKHJlbGF0aXZlUGF0aCkgPT4ge1xuICAgICAgaWYgKGlzRGVidWcpIHtcbiAgICAgICAgY29uc29sZS5sb2coYHJlbW92ZUlnbm9yZWRGaWxlczogcmVtb3ZlICR7cmVsYXRpdmVQYXRofWApXG4gICAgICB9XG4gICAgICByZW1vdmVTeW5jKGpvaW4oZGlyLCByZWxhdGl2ZVBhdGgpKVxuICAgIH0pXG59XG4iXX0=