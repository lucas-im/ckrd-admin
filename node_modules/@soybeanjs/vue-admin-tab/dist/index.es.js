var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a2, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a2, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a2, prop, b2[prop]);
    }
  return a2;
};
var __spreadProps = (a2, b2) => __defProps(a2, __getOwnPropDescs(b2));
import { ref, defineComponent, openBlock, createElementBlock, createElementVNode, normalizeStyle, unref, createVNode, Transition, withCtx, createBlock, computed, createStaticVNode, normalizeClass, renderSlot, createCommentVNode } from "vue";
function ampCount(selector) {
  let cnt = 0;
  for (let i2 = 0; i2 < selector.length; ++i2) {
    if (selector[i2] === "&")
      ++cnt;
  }
  return cnt;
}
const separatorRegex = /\s*,(?![^(]*\))\s*/g;
const extraSpaceRegex = /\s+/g;
function resolveSelectorWithAmp(amp, selector) {
  const nextAmp = [];
  selector.split(separatorRegex).forEach((partialSelector) => {
    let round = ampCount(partialSelector);
    if (!round) {
      amp.forEach((partialAmp) => {
        nextAmp.push((partialAmp && partialAmp + " ") + partialSelector);
      });
      return;
    } else if (round === 1) {
      amp.forEach((partialAmp) => {
        nextAmp.push(partialSelector.replace("&", partialAmp));
      });
      return;
    }
    let partialNextAmp = [
      partialSelector
    ];
    while (round--) {
      const nextPartialNextAmp = [];
      partialNextAmp.forEach((selectorItr) => {
        amp.forEach((partialAmp) => {
          nextPartialNextAmp.push(selectorItr.replace("&", partialAmp));
        });
      });
      partialNextAmp = nextPartialNextAmp;
    }
    partialNextAmp.forEach((part) => nextAmp.push(part));
  });
  return nextAmp;
}
function resolveSelector(amp, selector) {
  const nextAmp = [];
  selector.split(separatorRegex).forEach((partialSelector) => {
    amp.forEach((partialAmp) => {
      nextAmp.push((partialAmp && partialAmp + " ") + partialSelector);
    });
  });
  return nextAmp;
}
function parseSelectorPath(selectorPaths) {
  let amp = [""];
  selectorPaths.forEach((selector) => {
    selector = selector && selector.trim();
    if (!selector) {
      return;
    }
    if (selector.includes("&")) {
      amp = resolveSelectorWithAmp(amp, selector);
    } else {
      amp = resolveSelector(amp, selector);
    }
  });
  return amp.join(", ").replace(extraSpaceRegex, " ");
}
function removeElement(el) {
  if (!el)
    return;
  const parentElement = el.parentElement;
  if (parentElement)
    parentElement.removeChild(el);
}
function queryElement(id) {
  return document.querySelector(`style[cssr-id="${id}"]`);
}
function createElement(id) {
  const el = document.createElement("style");
  el.setAttribute("cssr-id", id);
  return el;
}
function isMediaOrSupports(selector) {
  if (!selector)
    return false;
  return /^\s*@(s|m)/.test(selector);
}
const kebabRegex = /[A-Z]/g;
function kebabCase(pattern) {
  return pattern.replace(kebabRegex, (match) => "-" + match.toLowerCase());
}
function unwrapProperty(prop, indent = "  ") {
  if (typeof prop === "object" && prop !== null) {
    return " {\n" + Object.entries(prop).map((v2) => {
      return indent + `  ${kebabCase(v2[0])}: ${v2[1]};`;
    }).join("\n") + "\n" + indent + "}";
  }
  return `: ${prop};`;
}
function unwrapProperties(props, instance, params) {
  if (typeof props === "function") {
    return props({
      context: instance.context,
      props: params
    });
  }
  return props;
}
function createStyle(selector, props, instance, params) {
  if (!props)
    return "";
  const unwrappedProps = unwrapProperties(props, instance, params);
  if (!unwrappedProps)
    return "";
  if (typeof unwrappedProps === "string") {
    return `${selector} {
${unwrappedProps}
}`;
  }
  const propertyNames = Object.keys(unwrappedProps);
  if (propertyNames.length === 0) {
    if (instance.config.keepEmptyBlock)
      return selector + " {\n}";
    return "";
  }
  const statements = selector ? [
    selector + " {"
  ] : [];
  propertyNames.forEach((propertyName) => {
    const property = unwrappedProps[propertyName];
    if (propertyName === "raw") {
      statements.push("\n" + property + "\n");
      return;
    }
    propertyName = kebabCase(propertyName);
    if (property !== null && property !== void 0) {
      statements.push(`  ${propertyName}${unwrapProperty(property)}`);
    }
  });
  if (selector) {
    statements.push("}");
  }
  return statements.join("\n");
}
function loopCNodeListWithCallback(children, options, callback) {
  if (!children)
    return;
  children.forEach((child) => {
    if (Array.isArray(child)) {
      loopCNodeListWithCallback(child, options, callback);
    } else if (typeof child === "function") {
      const grandChildren = child(options);
      if (Array.isArray(grandChildren)) {
        loopCNodeListWithCallback(grandChildren, options, callback);
      } else if (grandChildren) {
        callback(grandChildren);
      }
    } else if (child) {
      callback(child);
    }
  });
}
function traverseCNode(node, selectorPaths, styles, instance, params, styleSheet) {
  const $2 = node.$;
  let blockSelector = "";
  if (!$2 || typeof $2 === "string") {
    if (isMediaOrSupports($2)) {
      blockSelector = $2;
    } else {
      selectorPaths.push($2);
    }
  } else if (typeof $2 === "function") {
    const selector2 = $2({
      context: instance.context,
      props: params
    });
    if (isMediaOrSupports(selector2)) {
      blockSelector = selector2;
    } else {
      selectorPaths.push(selector2);
    }
  } else {
    if ($2.before)
      $2.before(instance.context);
    if (!$2.$ || typeof $2.$ === "string") {
      if (isMediaOrSupports($2.$)) {
        blockSelector = $2.$;
      } else {
        selectorPaths.push($2.$);
      }
    } else if ($2.$) {
      const selector2 = $2.$({
        context: instance.context,
        props: params
      });
      if (isMediaOrSupports(selector2)) {
        blockSelector = selector2;
      } else {
        selectorPaths.push(selector2);
      }
    }
  }
  const selector = parseSelectorPath(selectorPaths);
  const style = createStyle(selector, node.props, instance, params);
  if (blockSelector) {
    styles.push(`${blockSelector} {`);
    if (styleSheet && style) {
      styleSheet.insertRule(`${blockSelector} {
${style}
}
`);
    }
  } else {
    if (styleSheet && style) {
      styleSheet.insertRule(style);
    }
    if (!styleSheet && style.length)
      styles.push(style);
  }
  if (node.children) {
    loopCNodeListWithCallback(node.children, {
      context: instance.context,
      props: params
    }, (childNode) => {
      if (typeof childNode === "string") {
        const style2 = createStyle(selector, { raw: childNode }, instance, params);
        if (styleSheet) {
          styleSheet.insertRule(style2);
        } else {
          styles.push(style2);
        }
      } else {
        traverseCNode(childNode, selectorPaths, styles, instance, params, styleSheet);
      }
    });
  }
  selectorPaths.pop();
  if (blockSelector) {
    styles.push("}");
  }
  if ($2 && $2.after)
    $2.after(instance.context);
}
function render(node, instance, props, insertRule = false) {
  const styles = [];
  traverseCNode(node, [], styles, instance, props, insertRule ? node.instance.__styleSheet : void 0);
  if (insertRule)
    return "";
  return styles.join("\n\n");
}
function murmur2(str) {
  var h2 = 0;
  var k2, i2 = 0, len = str.length;
  for (; len >= 4; ++i2, len -= 4) {
    k2 = str.charCodeAt(i2) & 255 | (str.charCodeAt(++i2) & 255) << 8 | (str.charCodeAt(++i2) & 255) << 16 | (str.charCodeAt(++i2) & 255) << 24;
    k2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16);
    k2 ^= k2 >>> 24;
    h2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16) ^ (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  switch (len) {
    case 3:
      h2 ^= (str.charCodeAt(i2 + 2) & 255) << 16;
    case 2:
      h2 ^= (str.charCodeAt(i2 + 1) & 255) << 8;
    case 1:
      h2 ^= str.charCodeAt(i2) & 255;
      h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  h2 ^= h2 >>> 13;
  h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  return ((h2 ^ h2 >>> 15) >>> 0).toString(36);
}
if (typeof window !== "undefined") {
  window.__cssrContext = {};
}
function unmount(intance, node, id) {
  const { els } = node;
  if (id === void 0) {
    els.forEach(removeElement);
    node.els = [];
  } else {
    const target = queryElement(id);
    if (target && els.includes(target)) {
      removeElement(target);
      node.els = els.filter((el) => el !== target);
    }
  }
}
function addElementToList(els, target) {
  els.push(target);
}
function mount(instance, node, id, props, head, silent, force, anchorMetaName, ssrAdapter) {
  if (silent && !ssrAdapter) {
    if (id === void 0) {
      console.error("[css-render/mount]: `id` is required in `silent` mode.");
      return;
    }
    const cssrContext = window.__cssrContext;
    if (!cssrContext[id]) {
      cssrContext[id] = true;
      render(node, instance, props, silent);
    }
    return;
  }
  let style;
  if (id === void 0) {
    style = node.render(props);
    id = murmur2(style);
  }
  if (ssrAdapter) {
    ssrAdapter.adapter(id, style !== null && style !== void 0 ? style : node.render(props));
    return;
  }
  const queriedTarget = queryElement(id);
  if (queriedTarget !== null && !force) {
    return queriedTarget;
  }
  const target = queriedTarget !== null && queriedTarget !== void 0 ? queriedTarget : createElement(id);
  if (style === void 0)
    style = node.render(props);
  target.textContent = style;
  if (queriedTarget !== null)
    return queriedTarget;
  if (anchorMetaName) {
    const anchorMetaEl = document.head.querySelector(`meta[name="${anchorMetaName}"]`);
    if (anchorMetaEl) {
      document.head.insertBefore(target, anchorMetaEl);
      addElementToList(node.els, target);
      return target;
    }
  }
  if (head) {
    document.head.insertBefore(target, document.head.querySelector("style, link"));
  } else {
    document.head.appendChild(target);
  }
  addElementToList(node.els, target);
  return target;
}
function wrappedRender(props) {
  return render(this, this.instance, props);
}
function wrappedMount(options = {}) {
  const { id, ssr, props, head = false, silent = false, force = false, anchorMetaName } = options;
  const targetElement = mount(this.instance, this, id, props, head, silent, force, anchorMetaName, ssr);
  return targetElement;
}
function wrappedUnmount(options = {}) {
  const { id } = options;
  unmount(this.instance, this, id);
}
const createCNode = function(instance, $2, props, children) {
  return {
    instance,
    $: $2,
    props,
    children,
    els: [],
    render: wrappedRender,
    mount: wrappedMount,
    unmount: wrappedUnmount
  };
};
const c$2 = function(instance, $2, props, children) {
  if (Array.isArray($2)) {
    return createCNode(instance, { $: null }, null, $2);
  } else if (Array.isArray(props)) {
    return createCNode(instance, $2, null, props);
  } else if (Array.isArray(children)) {
    return createCNode(instance, $2, props, children);
  } else {
    return createCNode(instance, $2, props, null);
  }
};
function CssRender(config = {}) {
  let styleSheet = null;
  const cssr = {
    c: (...args) => c$2(cssr, ...args),
    use: (plugin, ...args) => plugin.install(cssr, ...args),
    find: queryElement,
    context: {},
    config,
    get __styleSheet() {
      if (!styleSheet) {
        const style = document.createElement("style");
        document.head.appendChild(style);
        styleSheet = document.styleSheets[document.styleSheets.length - 1];
        return styleSheet;
      }
      return styleSheet;
    }
  };
  return cssr;
}
function useBoolean(initValue = false) {
  const bool = ref(initValue);
  function setBool(value) {
    bool.value = value;
  }
  function setTrue() {
    setBool(true);
  }
  function setFalse() {
    setBool(false);
  }
  function toggle() {
    setBool(!bool.value);
  }
  return {
    bool,
    setBool,
    setTrue,
    setFalse,
    toggle
  };
}
const _hoisted_1$4 = {
  xmlns: "http://www.w3.org/2000/svg",
  "xmlns:xlink": "http://www.w3.org/1999/xlink",
  "aria-hidden": "true",
  role: "img",
  class: "iconify iconify--jam",
  preserveAspectRatio: "xMidYMid meet",
  viewBox: "-6 -6 24 24"
};
const _hoisted_2$4 = /* @__PURE__ */ createElementVNode("path", {
  fill: "currentColor",
  d: "m7.314 5.9l3.535-3.536A1 1 0 1 0 9.435.95L5.899 4.485L2.364.95A1 1 0 1 0 .95 2.364l3.535 3.535L.95 9.435a1 1 0 1 0 1.414 1.414l3.535-3.535l3.536 3.535a1 1 0 1 0 1.414-1.414L7.314 5.899z"
}, null, -1);
const _hoisted_3$3 = [
  _hoisted_2$4
];
const __default__$5 = { name: "SvgClose" };
const _sfc_main$5 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__$5), {
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("svg", _hoisted_1$4, _hoisted_3$3);
    };
  }
}));
const _hoisted_1$3 = {
  xmlns: "http://www.w3.org/2000/svg",
  "xmlns:xlink": "http://www.w3.org/1999/xlink",
  "aria-hidden": "true",
  role: "img",
  class: "iconify iconify--jam",
  preserveAspectRatio: "xMidYMid meet",
  viewBox: "-2 -2 24 24"
};
const _hoisted_2$3 = /* @__PURE__ */ createElementVNode("path", {
  fill: "currentColor",
  d: "m11.414 10l2.829-2.828a1 1 0 1 0-1.415-1.415L10 8.586L7.172 5.757a1 1 0 0 0-1.415 1.415L8.586 10l-2.829 2.828a1 1 0 0 0 1.415 1.415L10 11.414l2.828 2.829a1 1 0 0 0 1.415-1.415L11.414 10zM10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10s-4.477 10-10 10z"
}, null, -1);
const _hoisted_3$2 = [
  _hoisted_2$3
];
const __default__$4 = { name: "SvgCloseCircle" };
const _sfc_main$4 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__$4), {
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("svg", _hoisted_1$3, _hoisted_3$2);
    };
  }
}));
const __default__$3 = { name: "IconClose" };
const _sfc_main$3 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__$3), {
  props: {
    isActive: { type: Boolean },
    defaultColor: { default: "#9ca3af" },
    activeColor: { default: "#1890ff" }
  },
  setup(__props) {
    const { bool: isHover, setTrue, setFalse } = useBoolean();
    const { c: c2 } = CssRender();
    const style = c2(".admin-tab__icon", {
      position: "relative",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      width: "18px",
      height: "18px",
      fontSize: "14px"
    }, [
      c2("&-fade", {}, [
        c2("&-enter-active, &-leave-active", { transition: "opacity 0.3s ease-in-out" }),
        c2("&-enter-from, &-leave-to", { opacity: 0 })
      ]),
      c2("&-svg", { position: "absolute", width: "16px", height: "16px" })
    ]);
    style.render();
    style.mount();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: "admin-tab__icon",
        style: normalizeStyle({ color: __props.isActive ? __props.activeColor : __props.defaultColor }),
        onMouseenter: _cache[0] || (_cache[0] = (...args) => unref(setTrue) && unref(setTrue)(...args)),
        onMouseleave: _cache[1] || (_cache[1] = (...args) => unref(setFalse) && unref(setFalse)(...args))
      }, [
        createVNode(Transition, { name: "admin-tab__icon-fade" }, {
          default: withCtx(() => [
            unref(isHover) ? (openBlock(), createBlock(_sfc_main$4, {
              key: "hover",
              class: "admin-tab__icon-svg"
            })) : (openBlock(), createBlock(_sfc_main$5, {
              key: "unhover",
              class: "admin-tab__icon-svg"
            }))
          ]),
          _: 1
        })
      ], 36);
    };
  }
}));
var r$1 = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) }, t$1 = function(r2) {
  return typeof r2 == "string" ? r2.length > 0 : typeof r2 == "number";
}, n$1 = function(r2, t2, n2) {
  return t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = Math.pow(10, t2)), Math.round(n2 * r2) / n2 + 0;
}, e$1 = function(r2, t2, n2) {
  return t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = 1), r2 > n2 ? n2 : r2 > t2 ? r2 : t2;
}, u$1 = function(r2) {
  return (r2 = isFinite(r2) ? r2 % 360 : 0) > 0 ? r2 : r2 + 360;
}, a$1 = function(r2) {
  return { r: e$1(r2.r, 0, 255), g: e$1(r2.g, 0, 255), b: e$1(r2.b, 0, 255), a: e$1(r2.a) };
}, o$1 = function(r2) {
  return { r: n$1(r2.r), g: n$1(r2.g), b: n$1(r2.b), a: n$1(r2.a, 3) };
}, i$1 = /^#([0-9a-f]{3,8})$/i, s = function(r2) {
  var t2 = r2.toString(16);
  return t2.length < 2 ? "0" + t2 : t2;
}, h$1 = function(r2) {
  var t2 = r2.r, n2 = r2.g, e2 = r2.b, u2 = r2.a, a2 = Math.max(t2, n2, e2), o2 = a2 - Math.min(t2, n2, e2), i2 = o2 ? a2 === t2 ? (n2 - e2) / o2 : a2 === n2 ? 2 + (e2 - t2) / o2 : 4 + (t2 - n2) / o2 : 0;
  return { h: 60 * (i2 < 0 ? i2 + 6 : i2), s: a2 ? o2 / a2 * 100 : 0, v: a2 / 255 * 100, a: u2 };
}, b = function(r2) {
  var t2 = r2.h, n2 = r2.s, e2 = r2.v, u2 = r2.a;
  t2 = t2 / 360 * 6, n2 /= 100, e2 /= 100;
  var a2 = Math.floor(t2), o2 = e2 * (1 - n2), i2 = e2 * (1 - (t2 - a2) * n2), s2 = e2 * (1 - (1 - t2 + a2) * n2), h2 = a2 % 6;
  return { r: 255 * [e2, i2, o2, o2, s2, e2][h2], g: 255 * [s2, e2, e2, i2, o2, o2][h2], b: 255 * [o2, o2, s2, e2, e2, i2][h2], a: u2 };
}, g = function(r2) {
  return { h: u$1(r2.h), s: e$1(r2.s, 0, 100), l: e$1(r2.l, 0, 100), a: e$1(r2.a) };
}, d = function(r2) {
  return { h: n$1(r2.h), s: n$1(r2.s), l: n$1(r2.l), a: n$1(r2.a, 3) };
}, f$1 = function(r2) {
  return b((n2 = (t2 = r2).s, { h: t2.h, s: (n2 *= ((e2 = t2.l) < 50 ? e2 : 100 - e2) / 100) > 0 ? 2 * n2 / (e2 + n2) * 100 : 0, v: e2 + n2, a: t2.a }));
  var t2, n2, e2;
}, c$1 = function(r2) {
  return { h: (t2 = h$1(r2)).h, s: (u2 = (200 - (n2 = t2.s)) * (e2 = t2.v) / 100) > 0 && u2 < 200 ? n2 * e2 / 100 / (u2 <= 100 ? u2 : 200 - u2) * 100 : 0, l: u2 / 2, a: t2.a };
  var t2, n2, e2, u2;
}, l = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, p$1 = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, v = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, m = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, y = { string: [[function(r2) {
  var t2 = i$1.exec(r2);
  return t2 ? (r2 = t2[1]).length <= 4 ? { r: parseInt(r2[0] + r2[0], 16), g: parseInt(r2[1] + r2[1], 16), b: parseInt(r2[2] + r2[2], 16), a: r2.length === 4 ? n$1(parseInt(r2[3] + r2[3], 16) / 255, 2) : 1 } : r2.length === 6 || r2.length === 8 ? { r: parseInt(r2.substr(0, 2), 16), g: parseInt(r2.substr(2, 2), 16), b: parseInt(r2.substr(4, 2), 16), a: r2.length === 8 ? n$1(parseInt(r2.substr(6, 2), 16) / 255, 2) : 1 } : null : null;
}, "hex"], [function(r2) {
  var t2 = v.exec(r2) || m.exec(r2);
  return t2 ? t2[2] !== t2[4] || t2[4] !== t2[6] ? null : a$1({ r: Number(t2[1]) / (t2[2] ? 100 / 255 : 1), g: Number(t2[3]) / (t2[4] ? 100 / 255 : 1), b: Number(t2[5]) / (t2[6] ? 100 / 255 : 1), a: t2[7] === void 0 ? 1 : Number(t2[7]) / (t2[8] ? 100 : 1) }) : null;
}, "rgb"], [function(t2) {
  var n2 = l.exec(t2) || p$1.exec(t2);
  if (!n2)
    return null;
  var e2, u2, a2 = g({ h: (e2 = n2[1], u2 = n2[2], u2 === void 0 && (u2 = "deg"), Number(e2) * (r$1[u2] || 1)), s: Number(n2[3]), l: Number(n2[4]), a: n2[5] === void 0 ? 1 : Number(n2[5]) / (n2[6] ? 100 : 1) });
  return f$1(a2);
}, "hsl"]], object: [[function(r2) {
  var n2 = r2.r, e2 = r2.g, u2 = r2.b, o2 = r2.a, i2 = o2 === void 0 ? 1 : o2;
  return t$1(n2) && t$1(e2) && t$1(u2) ? a$1({ r: Number(n2), g: Number(e2), b: Number(u2), a: Number(i2) }) : null;
}, "rgb"], [function(r2) {
  var n2 = r2.h, e2 = r2.s, u2 = r2.l, a2 = r2.a, o2 = a2 === void 0 ? 1 : a2;
  if (!t$1(n2) || !t$1(e2) || !t$1(u2))
    return null;
  var i2 = g({ h: Number(n2), s: Number(e2), l: Number(u2), a: Number(o2) });
  return f$1(i2);
}, "hsl"], [function(r2) {
  var n2 = r2.h, a2 = r2.s, o2 = r2.v, i2 = r2.a, s2 = i2 === void 0 ? 1 : i2;
  if (!t$1(n2) || !t$1(a2) || !t$1(o2))
    return null;
  var h2 = function(r3) {
    return { h: u$1(r3.h), s: e$1(r3.s, 0, 100), v: e$1(r3.v, 0, 100), a: e$1(r3.a) };
  }({ h: Number(n2), s: Number(a2), v: Number(o2), a: Number(s2) });
  return b(h2);
}, "hsv"]] }, N = function(r2, t2) {
  for (var n2 = 0; n2 < t2.length; n2++) {
    var e2 = t2[n2][0](r2);
    if (e2)
      return [e2, t2[n2][1]];
  }
  return [null, void 0];
}, x = function(r2) {
  return typeof r2 == "string" ? N(r2.trim(), y.string) : typeof r2 == "object" && r2 !== null ? N(r2, y.object) : [null, void 0];
}, M = function(r2, t2) {
  var n2 = c$1(r2);
  return { h: n2.h, s: e$1(n2.s + 100 * t2, 0, 100), l: n2.l, a: n2.a };
}, H = function(r2) {
  return (299 * r2.r + 587 * r2.g + 114 * r2.b) / 1e3 / 255;
}, $ = function(r2, t2) {
  var n2 = c$1(r2);
  return { h: n2.h, s: n2.s, l: e$1(n2.l + 100 * t2, 0, 100), a: n2.a };
}, j = function() {
  function r2(r3) {
    this.parsed = x(r3)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 };
  }
  return r2.prototype.isValid = function() {
    return this.parsed !== null;
  }, r2.prototype.brightness = function() {
    return n$1(H(this.rgba), 2);
  }, r2.prototype.isDark = function() {
    return H(this.rgba) < 0.5;
  }, r2.prototype.isLight = function() {
    return H(this.rgba) >= 0.5;
  }, r2.prototype.toHex = function() {
    return r3 = o$1(this.rgba), t2 = r3.r, e2 = r3.g, u2 = r3.b, i2 = (a2 = r3.a) < 1 ? s(n$1(255 * a2)) : "", "#" + s(t2) + s(e2) + s(u2) + i2;
    var r3, t2, e2, u2, a2, i2;
  }, r2.prototype.toRgb = function() {
    return o$1(this.rgba);
  }, r2.prototype.toRgbString = function() {
    return r3 = o$1(this.rgba), t2 = r3.r, n2 = r3.g, e2 = r3.b, (u2 = r3.a) < 1 ? "rgba(" + t2 + ", " + n2 + ", " + e2 + ", " + u2 + ")" : "rgb(" + t2 + ", " + n2 + ", " + e2 + ")";
    var r3, t2, n2, e2, u2;
  }, r2.prototype.toHsl = function() {
    return d(c$1(this.rgba));
  }, r2.prototype.toHslString = function() {
    return r3 = d(c$1(this.rgba)), t2 = r3.h, n2 = r3.s, e2 = r3.l, (u2 = r3.a) < 1 ? "hsla(" + t2 + ", " + n2 + "%, " + e2 + "%, " + u2 + ")" : "hsl(" + t2 + ", " + n2 + "%, " + e2 + "%)";
    var r3, t2, n2, e2, u2;
  }, r2.prototype.toHsv = function() {
    return r3 = h$1(this.rgba), { h: n$1(r3.h), s: n$1(r3.s), v: n$1(r3.v), a: n$1(r3.a, 3) };
    var r3;
  }, r2.prototype.invert = function() {
    return w({ r: 255 - (r3 = this.rgba).r, g: 255 - r3.g, b: 255 - r3.b, a: r3.a });
    var r3;
  }, r2.prototype.saturate = function(r3) {
    return r3 === void 0 && (r3 = 0.1), w(M(this.rgba, r3));
  }, r2.prototype.desaturate = function(r3) {
    return r3 === void 0 && (r3 = 0.1), w(M(this.rgba, -r3));
  }, r2.prototype.grayscale = function() {
    return w(M(this.rgba, -1));
  }, r2.prototype.lighten = function(r3) {
    return r3 === void 0 && (r3 = 0.1), w($(this.rgba, r3));
  }, r2.prototype.darken = function(r3) {
    return r3 === void 0 && (r3 = 0.1), w($(this.rgba, -r3));
  }, r2.prototype.rotate = function(r3) {
    return r3 === void 0 && (r3 = 15), this.hue(this.hue() + r3);
  }, r2.prototype.alpha = function(r3) {
    return typeof r3 == "number" ? w({ r: (t2 = this.rgba).r, g: t2.g, b: t2.b, a: r3 }) : n$1(this.rgba.a, 3);
    var t2;
  }, r2.prototype.hue = function(r3) {
    var t2 = c$1(this.rgba);
    return typeof r3 == "number" ? w({ h: r3, s: t2.s, l: t2.l, a: t2.a }) : n$1(t2.h);
  }, r2.prototype.isEqual = function(r3) {
    return this.toHex() === w(r3).toHex();
  }, r2;
}(), w = function(r2) {
  return r2 instanceof j ? r2 : new j(r2);
}, S = [], k = function(r2) {
  r2.forEach(function(r3) {
    S.indexOf(r3) < 0 && (r3(j, y), S.push(r3));
  });
};
var t = function(t2, a2, n2) {
  return a2 === void 0 && (a2 = 0), n2 === void 0 && (n2 = 1), t2 > n2 ? n2 : t2 > a2 ? t2 : a2;
}, a = function(t2) {
  var a2 = t2 / 255;
  return a2 < 0.04045 ? a2 / 12.92 : Math.pow((a2 + 0.055) / 1.055, 2.4);
}, n = function(t2) {
  return 255 * (t2 > 31308e-7 ? 1.055 * Math.pow(t2, 1 / 2.4) - 0.055 : 12.92 * t2);
}, r = 96.422, o = 100, u = 82.521, e = function(a2) {
  var r2, o2, u2 = { x: 0.9555766 * (r2 = a2).x + -0.0230393 * r2.y + 0.0631636 * r2.z, y: -0.0282895 * r2.x + 1.0099416 * r2.y + 0.0210077 * r2.z, z: 0.0122982 * r2.x + -0.020483 * r2.y + 1.3299098 * r2.z };
  return o2 = { r: n(0.032404542 * u2.x - 0.015371385 * u2.y - 4985314e-9 * u2.z), g: n(-969266e-8 * u2.x + 0.018760108 * u2.y + 41556e-8 * u2.z), b: n(556434e-9 * u2.x - 2040259e-9 * u2.y + 0.010572252 * u2.z), a: a2.a }, { r: t(o2.r, 0, 255), g: t(o2.g, 0, 255), b: t(o2.b, 0, 255), a: t(o2.a) };
}, i = function(n2) {
  var e2 = a(n2.r), i2 = a(n2.g), p2 = a(n2.b);
  return function(a2) {
    return { x: t(a2.x, 0, r), y: t(a2.y, 0, o), z: t(a2.z, 0, u), a: t(a2.a) };
  }(function(t2) {
    return { x: 1.0478112 * t2.x + 0.0228866 * t2.y + -0.050127 * t2.z, y: 0.0295424 * t2.x + 0.9904844 * t2.y + -0.0170491 * t2.z, z: -92345e-7 * t2.x + 0.0150436 * t2.y + 0.7521316 * t2.z, a: t2.a };
  }({ x: 100 * (0.4124564 * e2 + 0.3575761 * i2 + 0.1804375 * p2), y: 100 * (0.2126729 * e2 + 0.7151522 * i2 + 0.072175 * p2), z: 100 * (0.0193339 * e2 + 0.119192 * i2 + 0.9503041 * p2), a: n2.a }));
}, p = 216 / 24389, h = 24389 / 27, f = function(t2) {
  var a2 = i(t2), n2 = a2.x / r, e2 = a2.y / o, f2 = a2.z / u;
  return n2 = n2 > p ? Math.cbrt(n2) : (h * n2 + 16) / 116, { l: 116 * (e2 = e2 > p ? Math.cbrt(e2) : (h * e2 + 16) / 116) - 16, a: 500 * (n2 - e2), b: 200 * (e2 - (f2 = f2 > p ? Math.cbrt(f2) : (h * f2 + 16) / 116)), alpha: a2.a };
}, c = function(a2, n2, i2) {
  var c2, y2 = f(a2), x2 = f(n2);
  return function(t2) {
    var a3 = (t2.l + 16) / 116, n3 = t2.a / 500 + a3, i3 = a3 - t2.b / 200;
    return e({ x: (Math.pow(n3, 3) > p ? Math.pow(n3, 3) : (116 * n3 - 16) / h) * r, y: (t2.l > 8 ? Math.pow((t2.l + 16) / 116, 3) : t2.l / h) * o, z: (Math.pow(i3, 3) > p ? Math.pow(i3, 3) : (116 * i3 - 16) / h) * u, a: t2.alpha });
  }({ l: t((c2 = { l: y2.l * (1 - i2) + x2.l * i2, a: y2.a * (1 - i2) + x2.a * i2, b: y2.b * (1 - i2) + x2.b * i2, alpha: y2.alpha * (1 - i2) + x2.alpha * i2 }).l, 0, 400), a: c2.a, b: c2.b, alpha: t(c2.alpha) });
};
function mixPlugin(t2) {
  function a2(t3, a3, n2) {
    n2 === void 0 && (n2 = 5);
    for (var r2 = [], o2 = 1 / (n2 - 1), u2 = 0; u2 <= n2 - 1; u2++)
      r2.push(t3.mix(a3, o2 * u2));
    return r2;
  }
  t2.prototype.mix = function(a3, n2) {
    n2 === void 0 && (n2 = 0.5);
    var r2 = a3 instanceof t2 ? a3 : new t2(a3), o2 = c(this.toRgb(), r2.toRgb(), n2);
    return new t2(o2);
  }, t2.prototype.tints = function(t3) {
    return a2(this, "#fff", t3);
  }, t2.prototype.shades = function(t3) {
    return a2(this, "#000", t3);
  }, t2.prototype.tones = function(t3) {
    return a2(this, "#808080", t3);
  };
}
k([mixPlugin]);
function addColorAlpha(color, alpha) {
  return w(color).alpha(alpha).toHex();
}
function mixColor(firstColor, secondColor, ratio) {
  return w(firstColor).mix(secondColor, ratio).toHex();
}
const _hoisted_1$2 = { style: { "width": "100%", "height": "100%" } };
const _hoisted_2$2 = /* @__PURE__ */ createStaticVNode('<defs><symbol id="geometry-left" viewBox="0 0 214 36"><path d="M17 0h197v36H0v-2c4.5 0 9-3.5 9-8V8c0-4.5 3.5-8 8-8z"></path></symbol><symbol id="geometry-right" viewBox="0 0 214 36"><use xlink:href="#geometry-left"></use></symbol><clipPath><rect width="100%" height="100%" x="0"></rect></clipPath></defs>', 1);
const _hoisted_3$1 = {
  width: "52%",
  height: "100%"
};
const _hoisted_4 = ["fill"];
const _hoisted_5 = { transform: "scale(-1, 1)" };
const _hoisted_6 = {
  width: "52%",
  height: "100%",
  x: "-100%",
  y: "0"
};
const _hoisted_7 = ["fill"];
const __default__$2 = { name: "SvgRadiusBg" };
const _sfc_main$2 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__$2), {
  props: {
    darkMode: { type: Boolean, default: false },
    isActive: { type: Boolean, default: false },
    isHover: { type: Boolean, default: false },
    primaryColor: { default: "#1890ff" },
    bgColor: { default: () => ["#ffffff", "#18181c"] },
    hoverBgColor: { default: () => ["#dee1e6", "#333333"] },
    mixColor: { default: () => ["#ffffff", "#000000"] },
    mixRatio: { default: () => [0.2, 0.3] }
  },
  setup(__props) {
    const props = __props;
    const fill = computed(() => {
      const index = Number(props.darkMode);
      let color = props.bgColor[index];
      if (props.isHover) {
        color = props.hoverBgColor[index];
      }
      if (props.isActive) {
        const ratio = props.mixRatio[index];
        color = mixColor(props.mixColor[index], props.primaryColor, ratio);
      }
      return color;
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("svg", _hoisted_1$2, [
        _hoisted_2$2,
        (openBlock(), createElementBlock("svg", _hoisted_3$1, [
          createElementVNode("use", {
            "xlink:href": "#geometry-left",
            width: "214",
            height: "36",
            fill: unref(fill)
          }, null, 8, _hoisted_4)
        ])),
        createElementVNode("g", _hoisted_5, [
          (openBlock(), createElementBlock("svg", _hoisted_6, [
            createElementVNode("use", {
              "xlink:href": "#geometry-right",
              width: "214",
              height: "36",
              fill: unref(fill)
            }, null, 8, _hoisted_7)
          ]))
        ])
      ]);
    };
  }
}));
const _hoisted_1$1 = { class: "admin-tab__button-tab__preffix" };
const _hoisted_2$1 = {
  key: 0,
  class: "admin-tab__button-tab__icon"
};
const __default__$1 = { name: "ButtonTab" };
const _sfc_main$1 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__$1), {
  props: {
    darkMode: { type: Boolean, default: false },
    isActive: { type: Boolean, default: false },
    primaryColor: { default: "#1890ff" },
    borderColor: { default: "#e5e7eb" },
    darkBorderColor: { default: "#ffffff3d" },
    closable: { type: Boolean, default: true }
  },
  emits: ["close"],
  setup(__props, { emit }) {
    const props = __props;
    const { bool: isHover, setTrue, setFalse } = useBoolean();
    const isIconActive = computed(() => props.isActive || isHover.value);
    const buttonStyle = computed(() => {
      const style2 = {};
      style2.borderColor = props.darkMode ? props.darkBorderColor : props.borderColor;
      if (isIconActive.value) {
        style2.color = props.primaryColor;
        style2.borderColor = addColorAlpha(props.primaryColor, 0.3);
        if (props.isActive) {
          const alpha = props.darkMode ? 0.15 : 0.1;
          style2.backgroundColor = addColorAlpha(props.primaryColor, alpha);
        }
      }
      return style2;
    });
    function handleClose(e2) {
      e2.stopPropagation();
      emit("close");
    }
    const { c: c2 } = CssRender();
    const style = c2(".admin-tab__button-tab", {
      position: "relative",
      display: "inline-flex",
      justifyContent: "center",
      alignItems: "center",
      height: "30px",
      paddingLeft: "14px",
      paddingRight: "6px",
      borderWidth: "1px",
      borderStyle: "solid",
      borderRadius: "2px",
      cursor: "pointer"
    }, [
      c2("&--unclosable", { paddingRight: "14px !important" }),
      c2("&__preffix", { whiteSpace: "nowrap" }),
      c2("&__icon", { paddingLeft: "10px" })
    ]);
    style.render();
    style.mount();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["admin-tab__button-tab", { "admin-tab__button-tab--unclosable": !__props.closable }]),
        style: normalizeStyle(unref(buttonStyle)),
        onMouseenter: _cache[0] || (_cache[0] = (...args) => unref(setTrue) && unref(setTrue)(...args)),
        onMouseleave: _cache[1] || (_cache[1] = (...args) => unref(setFalse) && unref(setFalse)(...args))
      }, [
        createElementVNode("span", _hoisted_1$1, [
          renderSlot(_ctx.$slots, "default")
        ]),
        __props.closable ? (openBlock(), createElementBlock("div", _hoisted_2$1, [
          createVNode(unref(_sfc_main$3), {
            "is-active": unref(isIconActive),
            "active-color": __props.primaryColor,
            onClick: handleClose
          }, null, 8, ["is-active", "active-color"])
        ])) : createCommentVNode("", true)
      ], 38);
    };
  }
}));
const _hoisted_1 = { class: "admin-tab__chrome-tab__bg" };
const _hoisted_2 = { class: "admin-tab__chrome-tab__slot" };
const _hoisted_3 = {
  key: 0,
  class: "admin-tab__chrome-tab__icon"
};
const __default__ = { name: "ChromeTab" };
const _sfc_main = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__), {
  props: {
    darkMode: { type: Boolean, default: false },
    isActive: { type: Boolean, default: false },
    primaryColor: { default: "#1890ff" },
    closable: { type: Boolean, default: true },
    bgColor: { default: () => ["#ffffff", "#18181c"] },
    hoverBgColor: { default: () => ["#dee1e6", "#3f3c37"] },
    mixColor: { default: () => ["#ffffff", "#000"] },
    mixRatio: { default: () => [0.13, 0.35] }
  },
  emits: ["close"],
  setup(__props, { emit }) {
    const { bool: isHover, setTrue, setFalse } = useBoolean();
    function handleClose(e2) {
      e2.stopPropagation();
      emit("close");
    }
    const { c: c2 } = CssRender();
    const style = c2(".admin-tab__chrome-tab", {
      position: "relative",
      display: "inline-flex",
      alignItems: "center",
      height: "34px",
      paddingLeft: "24px",
      paddingRight: "24px",
      marginRight: "-18px",
      cursor: "pointer"
    }, [
      c2("&--active", {
        zIndex: 10
      }),
      c2("&--hover", {
        zIndex: 9
      }),
      c2("&__bg", {
        position: "absolute",
        left: 0,
        bottom: 0,
        width: "100%",
        height: "100%",
        overflow: "hidden"
      }),
      c2("&__slot", {
        position: "relative",
        zIndex: 2,
        whiteSpace: "nowrap"
      }),
      c2("&__icon", {
        paddingLeft: "18px"
      }),
      c2("&__divider", {
        position: "absolute",
        right: "7.5px",
        zIndex: 2,
        width: "1px",
        height: "16px",
        backgroundColor: "#1f2225",
        opacity: 1,
        transition: "opacity 0.3s ease-in-out"
      }, [
        c2("&--hide", {
          opacity: 0
        }),
        c2("&--dark", {
          backgroundColor: "rgba(255,255,255,0.9) !important"
        })
      ])
    ]);
    style.render();
    style.mount();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["admin-tab__chrome-tab", { "admin-tab__chrome-tab--active": __props.isActive, "admin-tab__chrome-tab--hover": unref(isHover) }]),
        onMouseenter: _cache[0] || (_cache[0] = (...args) => unref(setTrue) && unref(setTrue)(...args)),
        onMouseleave: _cache[1] || (_cache[1] = (...args) => unref(setFalse) && unref(setFalse)(...args))
      }, [
        createElementVNode("div", _hoisted_1, [
          createVNode(unref(_sfc_main$2), {
            "dark-mode": __props.darkMode,
            "is-active": __props.isActive,
            "is-hover": unref(isHover),
            "primary-color": __props.primaryColor,
            "bg-color": __props.bgColor,
            "hover-bg-color": __props.hoverBgColor,
            "mix-color": __props.mixColor,
            "mix-ratio": __props.mixRatio
          }, null, 8, ["dark-mode", "is-active", "is-hover", "primary-color", "bg-color", "hover-bg-color", "mix-color", "mix-ratio"])
        ]),
        createElementVNode("span", _hoisted_2, [
          renderSlot(_ctx.$slots, "default")
        ]),
        __props.closable ? (openBlock(), createElementBlock("div", _hoisted_3, [
          createVNode(unref(_sfc_main$3), {
            "is-active": __props.isActive,
            "active-color": __props.primaryColor,
            onClick: handleClose
          }, null, 8, ["is-active", "active-color"])
        ])) : createCommentVNode("", true),
        createElementVNode("div", {
          class: normalizeClass(["admin-tab__chrome-tab__divider", {
            "admin-tab__chrome-tab__divider--hide": unref(isHover) || __props.isActive,
            "admin-tab__chrome-tab__divider--dark": __props.darkMode
          }])
        }, null, 2)
      ], 34);
    };
  }
}));
export { _sfc_main$1 as ButtonTab, _sfc_main as ChromeTab };
